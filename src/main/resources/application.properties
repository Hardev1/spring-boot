spring.datasource.url=jdbc:mysql://localhost:3306/clinicabd

spring.datasource.username=root

spring.datasource.password=

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

server.port=8081

spring.jpa.open-in-view=false

#spring.jpa.show-sql: true

spring.jpa.hibernate.ddl-auto=update

spring.thymeleaf.suffix=.html
spring.thymeleaf.check-template-location=true

# application.properties
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#Esta propiedad le dice a Hibernate que actualice automáticamente la estructura 
#del esquema de la base de datos según las entidades definidas en tu aplicación. 
#Sin embargo, ten en cuenta que esta configuración puede tener implicaciones en 
#la integridad de los datos y la migración de la base de datos en entornos de 
#producción. Por lo tanto, es importante tener cuidado al utilizar esta opción, 
#especialmente en entornos de producción.
#En entornos de producción, se recomienda desactivar la creación automática de 
#tablas y manejar las migraciones de base de datos de manera controlada y deliberada. 
#La razón principal es que la creación automática de tablas (ddl-auto) puede causar 
#problemas de integridad de datos y pérdida de información si no se maneja correctamente. 
#Además, puede ser una vulnerabilidad de seguridad si se permite que Hibernate altere la 
#estructura de la base de datos en un entorno de producción.

#En su lugar, se recomienda utilizar una herramienta de migración de bases de datos, como 
#Flyway o Liquibase. Estas herramientas te permiten mantener un control preciso sobre los 
#cambios en la estructura de la base de datos a lo largo del tiempo mediante la escritura 
#y ejecución de scripts de migración SQL. Esto garantiza un proceso controlado y reversible
#para aplicar cambios en la base de datos, lo que es fundamental para la integridad de los
#datos y la seguridad en entornos de producción.